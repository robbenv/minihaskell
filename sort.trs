reverse nil         = nil .
reverse (cons X XS) = append (reverse XS) (cons X nil) .

shuffle nil         = nil .
shuffle (cons X XS) = cons X (reverse (shuffle XS)) .

range 0     = nil .
range (s X) = cons X (range X) .


not true  = false .
not false = true .

lt X 0         = false .
lt 0 (s Y)     = true .
lt (s X) (s Y) = lt X Y .

geq X Y = not (lt X Y) .

append nil YS         = YS .
append (cons X XS) YS = cons X (append XS YS) .

split nil = nil nil .
split (cons X nil) = (cons X nil) nil.
split (cons X (cons Y XS)) =  split X Y (split XS) .
split X Y (LXS RXS) = (cons X LXS) (cons Y RXS) . 

merge nil XS =  XS .
merge XS nil =  XS .
merge (cons L LS) (cons R RS) = merge_if (cons L LS) (cons R RS) (lt L R) .
merge_if (cons L LS) (cons R RS) true = cons L (merge LS (cons R RS)) . 
merge_if (cons L LS) (cons R RS) false = cons R (merge (cons L LS) RS) .

msort nil         = nil .
msort (cons X nil)           = (cons X nil) .
msort (cons X  XS) = msort (split (cons X  XS)) .
msort (LXS RXS) = merge (msort LXS) (msort RXS) .


main = msort (shuffle (range 100)) .


